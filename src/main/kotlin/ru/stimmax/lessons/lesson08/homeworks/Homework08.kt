package ru.stimmax.lessons.lesson08.homeworks

import ru.stimmax.lessons.lesson08.example6

fun main() {
    example("Это невозможно выполнить за один день.")
    example("Я не уверен в успехе этого проекта")
    example("Произошла катастрофа на сервере.")
    example("Этот код работает без проблем")
    example("Удача")
    example2("Пользователь вошел в систему -> 2021-12-01 09:48:23")
    example3("4539 1488 0343 6467")
    example4("username@example.com")
    example5("C:/Пользователи/Документы/report.txt")
    example5("D:/good.themes/dracula.theme")
    example6("Котлин лучший язык программирования")
}

//1. Преобразование строк
//Создайте функцию, которая будет анализировать входящие фразы и применять к ним различные преобразования, делая текст более ироничным или забавным. Функция должна уметь распознавать ключевые слова или условия и соответственно изменять фразу.
//
//Правила проверки и преобразования:
//
//Если фраза содержит слово "невозможно":
//Преобразование: Замените "невозможно" на "совершенно точно возможно, просто требует времени".
//Если фраза начинается с "Я не уверен":
//Преобразование: Добавьте в конец фразы ", но моя интуиция говорит об обратном".
//Если фраза содержит слово "катастрофа":
//Преобразование: Замените "катастрофа" на "интересное событие".
//Если фраза заканчивается на "без проблем":
//Преобразование: Замените "без проблем" на "с парой интересных вызовов на пути".
//Если фраза содержит только одно слово:
//Преобразование: Добавьте перед словом "Иногда," и после слова ", но не всегда".
//Примеры Тестовых Фраз:
//
//"Это невозможно выполнить за один день"
//"Я не уверен в успехе этого проекта"
//"Произошла катастрофа на сервере"
//"Этот код работает без проблем"
//"Удача"
fun example(arg: String) {
    val result = when {
//Если фраза содержит слово "невозможно". Преобразование: Замените "невозможно" на "совершенно точно возможно, просто требует времени".
        arg.contains("невозможно") -> arg.replace("невозможно", "совершенно точно возможно, просто требует времени")
//Если фраза начинается с "Я не уверен". Преобразование: Добавьте в конец фразы ", но моя интуиция говорит об обратном".
        arg.startsWith("Я не уверен") -> "$arg, но моя интуиция говорит об обратном."
//Если фраза содержит слово "катастрофа". Преобразование: Замените "катастрофа" на "интересное событие".
        arg.contains("катастрофа") -> arg.replace("катастрофа", "интересное событие")
//Если фраза заканчивается на "без проблем". Преобразование: Замените "без проблем" на "с парой интересных вызовов на пути".
        arg.endsWith("без проблем", true) -> arg.replace("без проблем", "с парой интересных вызовов на пути.")
//Если фраза содержит только одно слово. Преобразование: Добавьте перед словом "Иногда," и после слова ", но не всегда".
        !arg.contains(" ") -> "Иногда ${arg.lowercase()}, но не всегда." //не содержит пробел
        else -> arg
    }
    println(result)
}

//2. Извлечение даты из строки лога
//У вас есть строка лога, например "Пользователь вошел
//в систему -> 2021-12-01 09:48:23" (данные могут быть любыми, но формат всегда такой).
//Извлеките отдельно дату и время из этой строки и сразу распечатай их по очереди.
//Используй indexOf или split для получения правой части сообщения.
//("Пользователь вошел в систему -> 2021-12-01 09:48:23")
fun example2(log: String) {
    val log = "Пользователь вошел в систему -> 2021-12-01 09:48:23"
    val arrowIndex = log.split("->") // разделяет строку на массив строк по разделителю ->
    val dateTime = arrowIndex[1].trim() //[1] мы смотрим только на вторую часть после стрелки и убираем пробелы в начале и конце строки
    val date = dateTime.split(" ")[0] //первый элемент - дата
    val time = dateTime.split(" ")[1] //второй элемент - время
    println(date)
    println(time)
}

//3. Маскирование личных данных
//Дана строка с номером кредитной карты, например "4539 1488 0343 6467".
//Замаскируйте все цифры, кроме последних четырех, символами "*".
fun example3(card: String) {
    val card = "4539 1488 0343 6467"
    val lastFour = card.substring(15) // последние 4 символа
    val maskcard = card.substring(0, 15).replace(Regex("\\d"), "*") //все цифры карты, кроме последних четырех
//Regex("\\d") означает регулярное выражение, любая цифра от 0 до 9, причем пробелы остаются без изменений
    println(maskcard + lastFour)
}

//4. Форматирование адреса электронной почты.
//У вас есть электронный адрес, например "username@example.com".
//Преобразуйте его в строку "username [at] example [dot] com", используя функцию replace()
fun example4(email: String) {
    val email = "username@example.com"
    val changeEmail = email.replace("@", " [at] ").replace(".", " [dot] ")
    println(changeEmail)
}

//5. Извлечение имени файла из пути.
//Дан путь к файлу, например "C:/Пользователи/Документы/report.txt" или
//"D:/good.themes/dracula.theme" (может быть любым). Извлеките название файла с расширением.
fun example5(path: String) {
    val lastSlashIndex = path.lastIndexOf("/") // нашли последний символ "/" в пути
    val fileName = path.substring(lastSlashIndex + 1) // взяли все после "/"
    println(fileName)
}

//6. Создание аббревиатуры из фразы.
//У вас есть фраза, например "Котлин лучший язык программирования"
//(может быть любой с разделителями слов - пробел).
//Создайте аббревиатуру из начальных букв слов (например, "ООП").

fun example6(phrase: String) {
    val words = phrase.split(" ") // разбили на слова
    var abbreviation = ""
    for (word in words) {
        if (word.isNotEmpty()) { // убрали пробелы
            abbreviation += word[0].uppercase() // добавляем букву к результату, берем первый символ и делаем заглавными
        }
    }
    println(abbreviation)
}